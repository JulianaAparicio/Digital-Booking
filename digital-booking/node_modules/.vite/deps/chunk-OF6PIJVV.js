import {
  __esm,
  __export
} from "./chunk-J43GMYXM.js";

// node_modules/react-date-object/dist/index.module.js
var index_module_exports = {};
__export(index_module_exports, {
  default: () => U
});
function t(e2) {
  return (t = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t2) {
    return typeof t2;
  } : function(t2) {
    return t2 && "function" == typeof Symbol && t2.constructor === Symbol && t2 !== Symbol.prototype ? "symbol" : typeof t2;
  })(e2);
}
function e(t2) {
  return function(t3) {
    if (Array.isArray(t3))
      return c(t3);
  }(t2) || n(t2) || h(t2) || function() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }();
}
function n(t2) {
  if ("undefined" != typeof Symbol && null != t2[Symbol.iterator] || null != t2["@@iterator"])
    return Array.from(t2);
}
function i(t2, e2) {
  var n2 = "undefined" != typeof Symbol && t2[Symbol.iterator] || t2["@@iterator"];
  if (!n2) {
    if (Array.isArray(t2) || (n2 = h(t2)) || e2 && t2 && "number" == typeof t2.length) {
      n2 && (t2 = n2);
      var i2 = 0, r2 = function() {
      };
      return { s: r2, n: function() {
        return i2 >= t2.length ? { done: true } : { done: false, value: t2[i2++] };
      }, e: function(t3) {
        throw t3;
      }, f: r2 };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var s2, a2 = true, u2 = false;
  return { s: function() {
    n2 = n2.call(t2);
  }, n: function() {
    var t3 = n2.next();
    return a2 = t3.done, t3;
  }, e: function(t3) {
    u2 = true, s2 = t3;
  }, f: function() {
    try {
      a2 || null == n2.return || n2.return();
    } finally {
      if (u2)
        throw s2;
    }
  } };
}
function r(t2, e2) {
  var n2 = Object.keys(t2);
  if (Object.getOwnPropertySymbols) {
    var i2 = Object.getOwnPropertySymbols(t2);
    e2 && (i2 = i2.filter(function(e3) {
      return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
    })), n2.push.apply(n2, i2);
  }
  return n2;
}
function s(t2) {
  for (var e2 = 1; e2 < arguments.length; e2++) {
    var n2 = null != arguments[e2] ? arguments[e2] : {};
    e2 % 2 ? r(Object(n2), true).forEach(function(e3) {
      a(t2, e3, n2[e3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : r(Object(n2)).forEach(function(e3) {
      Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
    });
  }
  return t2;
}
function a(t2, e2, n2) {
  return e2 in t2 ? Object.defineProperty(t2, e2, { value: n2, enumerable: true, configurable: true, writable: true }) : t2[e2] = n2, t2;
}
function u(t2, e2) {
  return l(t2) || function(t3, e3) {
    var n2 = null == t3 ? null : "undefined" != typeof Symbol && t3[Symbol.iterator] || t3["@@iterator"];
    if (null == n2)
      return;
    var i2, r2, s2 = [], a2 = true, u2 = false;
    try {
      for (n2 = n2.call(t3); !(a2 = (i2 = n2.next()).done) && (s2.push(i2.value), !e3 || s2.length !== e3); a2 = true)
        ;
    } catch (t4) {
      u2 = true, r2 = t4;
    } finally {
      try {
        a2 || null == n2.return || n2.return();
      } finally {
        if (u2)
          throw r2;
      }
    }
    return s2;
  }(t2, e2) || h(t2, e2) || o();
}
function o() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function h(t2, e2) {
  if (t2) {
    if ("string" == typeof t2)
      return c(t2, e2);
    var n2 = Object.prototype.toString.call(t2).slice(8, -1);
    return "Object" === n2 && t2.constructor && (n2 = t2.constructor.name), "Map" === n2 || "Set" === n2 ? Array.from(t2) : "Arguments" === n2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2) ? c(t2, e2) : void 0;
  }
}
function c(t2, e2) {
  (null == e2 || e2 > t2.length) && (e2 = t2.length);
  for (var n2 = 0, i2 = new Array(e2); n2 < e2; n2++)
    i2[n2] = t2[n2];
  return i2;
}
function l(t2) {
  if (Array.isArray(t2))
    return t2;
}
function f(t2, e2) {
  for (var n2 = 0; n2 < e2.length; n2++) {
    var i2 = e2[n2];
    i2.enumerable = i2.enumerable || false, i2.configurable = true, "value" in i2 && (i2.writable = true), Object.defineProperty(t2, i2.key, i2);
  }
}
function y(t2, e2, n2) {
  !function(t3, e3) {
    if (e3.has(t3))
      throw new TypeError("Cannot initialize the same private elements twice on an object");
  }(t2, e2), e2.set(t2, n2);
}
function d(t2, e2) {
  return function(t3, e3) {
    if (e3.get)
      return e3.get.call(t3);
    return e3.value;
  }(t2, v(t2, e2, "get"));
}
function m(t2, e2, n2) {
  return function(t3, e3, n3) {
    if (e3.set)
      e3.set.call(t3, n3);
    else {
      if (!e3.writable)
        throw new TypeError("attempted to set read only private field");
      e3.value = n3;
    }
  }(t2, v(t2, e2, "set"), n2), n2;
}
function v(t2, e2, n2) {
  if (!e2.has(t2))
    throw new TypeError("attempted to " + n2 + " private field on non-instance");
  return e2.get(t2);
}
function p(t2) {
  return t2 && t2.constructor === Object;
}
function b(t2) {
  if (!isNaN(t2))
    return parseInt(t2);
}
function w(t2) {
  return Array.isArray(t2);
}
function D(t2, e2, n2) {
  return void 0 === t2 || t2 < e2 || t2 > n2;
}
var g, k, M, O, S, Y, L, W, x, N, j, A, I, F, T, E, P, H, V, J, C, U;
var init_index_module = __esm({
  "node_modules/react-date-object/dist/index.module.js"() {
    g = { name: "gregorian_en", months: [["January", "Jan"], ["February", "Feb"], ["March", "Mar"], ["April", "Apr"], ["May", "May"], ["June", "Jun"], ["July", "Jul"], ["August", "Aug"], ["September", "Sep"], ["October", "Oct"], ["November", "Nov"], ["December", "Dec"]], weekDays: [["Saturday", "Sat"], ["Sunday", "Sun"], ["Monday", "Mon"], ["Tuesday", "Tue"], ["Wednesday", "Wed"], ["Thursday", "Thu"], ["Friday", "Fri"]], digits: ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"], meridiems: [["AM", "am"], ["PM", "pm"]] };
    k = { name: "gregorian", startYear: 1, yearLength: 365, epoch: 1721424, century: 20, weekStartDayIndex: 1, getMonthLengths: function(t2) {
      return [31, t2 ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
    }, isLeap: function(t2) {
      return t2 % 4 == 0 && t2 % 100 != 0 || t2 % 400 == 0;
    }, getLeaps: function(t2) {
      if (0 !== t2) {
        for (var e2 = t2 > 0 ? 1 : -1, n2 = []; t2 > 0 ? e2 <= t2 : t2 <= e2; )
          this.isLeap(e2) && n2.push(e2), t2 > 0 ? e2++ : e2--;
        return n2;
      }
    }, getDayOfYear: function(t2) {
      for (var e2 = t2.year, n2 = t2.month, i2 = t2.day, r2 = this.getMonthLengths(this.isLeap(e2)), s2 = 0; s2 < n2.index; s2++)
        i2 += r2[s2];
      return i2;
    }, getAllDays: function(t2) {
      var e2 = t2.year;
      return this.yearLength * (e2 - 1) + this.leapsLength(e2) + this.getDayOfYear(t2);
    }, leapsLength: function(t2) {
      return ((t2 - 1) / 4 | 0) + (-(t2 - 1) / 100 | 0) + ((t2 - 1) / 400 | 0);
    }, guessYear: function(t2, e2) {
      return ~~(t2 / 365.24) + (e2 > 0 ? 1 : -1);
    } };
    M = /* @__PURE__ */ new WeakMap();
    O = /* @__PURE__ */ new WeakMap();
    S = /* @__PURE__ */ new WeakMap();
    Y = /* @__PURE__ */ new WeakMap();
    L = /* @__PURE__ */ new WeakMap();
    W = /* @__PURE__ */ new WeakMap();
    x = /* @__PURE__ */ new WeakMap();
    N = /* @__PURE__ */ new WeakMap();
    j = /* @__PURE__ */ new WeakMap();
    A = /* @__PURE__ */ new WeakMap();
    I = /* @__PURE__ */ new WeakMap();
    F = /* @__PURE__ */ new WeakMap();
    T = /* @__PURE__ */ new WeakMap();
    E = /* @__PURE__ */ new WeakMap();
    P = /* @__PURE__ */ new WeakMap();
    H = /* @__PURE__ */ new WeakMap();
    V = /* @__PURE__ */ new WeakMap();
    J = /* @__PURE__ */ new WeakMap();
    C = /* @__PURE__ */ new WeakMap();
    U = function() {
      function r2(t2) {
        var e2 = this;
        !function(t3, e3) {
          if (!(t3 instanceof e3))
            throw new TypeError("Cannot call a class as a function");
        }(this, r2), y(this, M, { writable: true, value: void 0 }), y(this, O, { writable: true, value: void 0 }), y(this, S, { writable: true, value: void 0 }), y(this, Y, { writable: true, value: void 0 }), y(this, L, { writable: true, value: void 0 }), y(this, W, { writable: true, value: void 0 }), y(this, x, { writable: true, value: void 0 }), y(this, N, { writable: true, value: void 0 }), y(this, j, { writable: true, value: g }), y(this, A, { writable: true, value: k }), y(this, I, { writable: true, value: false }), y(this, F, { writable: true, value: {} }), y(this, T, { writable: true, value: /^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d\.\d\d\dZ$/ }), y(this, E, { writable: true, value: [] }), y(this, P, { writable: true, value: true }), y(this, H, { writable: true, value: function(t3, n3) {
          switch (t3) {
            case "YYYY":
              return ["year", n3];
            case "YY":
              return ["year", "".concat(d(e2, A).century).concat(n3)];
            case "MMMM":
            case "MMM":
              return ["month", e2.months.findIndex(function(t4) {
                var e3 = t4.name, i4 = t4.shortName;
                return new RegExp(n3, "i").test(e3 + i4);
              }) + 1];
            case "MM":
            case "M":
              return ["month", n3];
            case "DD":
            case "D":
              return ["day", n3];
            case "HH":
            case "H":
              return ["hour", n3];
            case "hh":
            case "h":
              var i3 = b(n3);
              return ["hour", i3 > 12 ? i3 - 12 : i3];
            case "mm":
            case "m":
              return ["minute", n3];
            case "ss":
            case "s":
              return ["second", n3];
            case "SSS":
            case "SS":
            case "S":
              return ["millisecond", n3];
            default:
              return [];
          }
        } }), y(this, V, { writable: true, value: function() {
          return 0 === d(e2, M) && 0 !== d(e2, A).startYear;
        } }), y(this, J, { writable: true, value: function() {
          if (d(e2, P) && e2.isValid) {
            var t3 = Math.floor, n3 = function(e3, n4) {
              return [(s3 = e3, (s3 < 0 ? -1 : 1) * Math.abs(t3(e3 / n4))), (i4 = e3, r4 = n4, (i4 < 0 && -0 !== t3(i4 % r4) ? r4 : 0) + t3(e3 % n4))];
              var i4, r4, s3;
            }, i3 = function() {
              if (d(e2, O) < 0 || d(e2, O) > 11) {
                var t4 = d(e2, O) < 0 ? -1 : 1, i4 = u(n3(d(e2, O), 12), 2), r4 = i4[0], s3 = i4[1];
                m(e2, M, d(e2, M) + r4), m(e2, O, s3), d(e2, V).call(e2) && m(e2, M, t4);
              }
            };
            for (m(e2, P, false), [["millisecond", "second", 1e3], ["second", "minute", 60], ["minute", "hour", 60], ["hour", "day", 24]].forEach(function(t4) {
              var i4 = u(t4, 3), r4 = i4[0], s3 = i4[1], a5 = i4[2];
              if (function(t5, e3) {
                return t5 >= e3 || t5 < 0;
              }(e2[r4], a5)) {
                var o2 = u(n3(e2[r4], a5), 2), h2 = o2[0], c3 = o2[1];
                e2[s3] += h2, e2[r4] = c3;
              }
            }), m(e2, P, true), i3(); d(e2, S) < -d(e2, A).yearLength || d(e2, S) > d(e2, A).yearLength; ) {
              if (d(e2, O) > 0) {
                for (var r3 = d(e2, A).getMonthLengths(e2.isLeap), s2 = 0; s2 < d(e2, O); s2++)
                  m(e2, S, d(e2, S) + r3[s2]);
                m(e2, O, 0);
              }
              var a4 = e2.isLeap ? e2.calendar.yearLength + 1 : e2.calendar.yearLength;
              m(e2, S, d(e2, S) + a4 * (d(e2, S) < 0 ? 1 : -1)), m(e2, M, d(e2, M) + (d(e2, S) < 0 ? -1 : 1));
            }
            for (; ; ) {
              for (i3(); d(e2, S) < 1; )
                m(e2, O, d(e2, O) - 1), i3(), m(e2, S, e2.month.length + d(e2, S));
              if (d(e2, S) <= e2.month.length || isNaN(d(e2, S)))
                break;
              m(e2, S, d(e2, S) - e2.month.length), m(e2, O, 1 + +d(e2, O));
            }
            d(e2, Y) || m(e2, Y, 0), d(e2, L) || m(e2, L, 0), d(e2, W) || m(e2, W, 0), d(e2, x) || m(e2, x, 0);
          }
        } }), y(this, C, { writable: true, value: function() {
          return (d(e2, F).weekDays || d(e2, j).weekDays).map(function(t3, n3) {
            var i3 = u(t3, 2), r3 = i3[0], s2 = i3[1], a4 = n3 - e2.weekStartDayIndex;
            return a4 < 0 && (a4 += 7), { name: r3, shortName: s2, index: a4, number: a4 + 1, toString: function() {
              return this.number.toString();
            }, valueOf: function() {
              return this.number;
            } };
          });
        } });
        var n2 = p(t2) ? s({}, t2) : t2, i2 = true;
        if (n2 && "boolean" != typeof n2 || (n2 = { date: new Date() }), p(n2) || (n2 = { date: n2 }), 0 !== Object.keys(n2).length) {
          for (var a3 in p(n2.calendar) && m(this, A, n2.calendar), p(n2.locale) && m(this, j, n2.locale), isNaN(n2.year) && isNaN(n2.month) && isNaN(n2.day) && !n2.date && (n2.date = new Date()), n2.date && ("string" == typeof n2.date && n2.format && m(this, N, n2.format), this.setDate(n2.date), n2.calendar && this.convert(n2.calendar), i2 = false), delete n2.calendar, delete n2.locale, delete n2.date, n2)
            this.set(a3, n2[a3]);
          d(this, V).call(this) && m(this, M, -1), i2 && d(this, J).call(this);
        }
      }
      var a2, c2, v2;
      return a2 = r2, (c2 = [{ key: "parse", value: function(t2) {
        if (!t2)
          return this;
        var r3, s2, a3 = d(this, N), c3 = d(this, j).digits, f2 = i(c3);
        try {
          for (f2.s(); !(r3 = f2.n()).done; ) {
            var y2 = r3.value;
            t2 = t2.replace(new RegExp(y2, "g"), c3.indexOf(y2));
          }
        } catch (t3) {
          f2.e(t3);
        } finally {
          f2.f();
        }
        if (a3)
          for (var v3 = a3.split(/[^\w\u0600-\u06FF]/), g2 = t2.split(/[^\w\u0600-\u06FF]/), k2 = 0; k2 < v3.length; k2++)
            this.set.apply(this, e(d(this, H).call(this, v3[k2], g2[k2])));
        else {
          var p2 = t2.match(/(-?\d{2,4})?\W?([A-z]{3,9}|\d{1,2})?\W?(\d{1,2})?\W?(\d{1,2})?\W?(\d{1,2})?\W?(\d{1,2})?\W?(\d{1,3})?\W?(am|pm)?/), w2 = (l(s2 = p2) || n(s2) || h(s2) || o()).slice(1), D2 = w2[1];
          D2 && (D2 = /\d+/.test(D2) ? b(D2) - 1 : this.months.findIndex(function(t3) {
            return new RegExp(D2, "i").test(t3.name);
          })), w2[1] = D2;
          var A2 = u(w2.map(b), 7), I2 = A2[0], F2 = A2[1], T2 = A2[2], E2 = A2[3], P2 = A2[4], V2 = A2[5], C2 = A2[6];
          m(this, M, I2), m(this, O, F2), m(this, S, T2), m(this, Y, E2), m(this, L, P2), m(this, W, V2), m(this, x, C2);
        }
        var U2 = u(d(this, j).meridiems[1], 2), R = U2[0], _ = U2[1];
        return d(this, Y) < 12 && (t2.includes(R) || t2.includes(_)) && m(this, Y, d(this, Y) + 12), d(this, J).call(this), this;
      } }, { key: "convert", value: function() {
        var t2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : k, e2 = arguments.length > 1 ? arguments[1] : void 0;
        if (p(e2) && m(this, j, e2), !p(t2) || t2.name === d(this, A).name)
          return this;
        var n2 = this.toJulianDay() - t2.epoch, i2 = new r2({ calendar: t2, year: t2.guessYear(n2, d(this, M)), month: 1, day: 1 });
        return i2.day += n2 - i2.toDays(), m(this, M, i2.year), m(this, O, i2.month.index), m(this, S, i2.day), m(this, A, t2), this;
      } }, { key: "format", value: function(e2, n2) {
        if (!this.isValid || e2 && "string" != typeof e2)
          return "";
        e2 || (e2 = d(this, N) || "YYYY/MM/DD"), w(n2) || (n2 = []), n2 = (n2 = n2.concat(d(this, E))).filter(function(e3) {
          return "string" == typeof e3 || (console.warn("type of all items in the ignore list must be string, found", t(e3)), false);
        }).map(function(t2) {
          return t2.replace(/[*/+\-()[\]{}\s$^]/g, function(t3) {
            return "\\" + t3;
          });
        });
        var r3, s2 = new RegExp("".concat(n2.join("|")).concat(n2.length > 0 ? "|" : "", "YYYY|YY|MMMM|MMM|MM|M|WW|W|DDDD|DDD|DD|D|dddd|ddd|dd|d|HH|H|hh|h|mm|m|ss|s|SSS|SS|S|A|a|."), "g"), a3 = "", u2 = i(e2.match(s2) || []);
        try {
          for (u2.s(); !(r3 = u2.n()).done; ) {
            var o2 = r3.value, h2 = this.getValue(o2);
            a3 += n2.includes(o2) ? o2 : 0 === h2 ? h2 : h2 || o2;
          }
        } catch (t2) {
          u2.e(t2);
        } finally {
          u2.f();
        }
        var c3 = this.digits;
        return a3.replace(/[0-9]/g, function(t2) {
          return c3[t2];
        });
      } }, { key: "getProperty", value: function(t2) {
        return this.getValue(t2);
      } }, { key: "getValue", value: function(t2) {
        var e2 = function(t3) {
          return t3 < 10 ? "0" + t3 : t3;
        };
        switch (t2) {
          case "YYYY":
            return this.year;
          case "YY":
            return this.year.toString().substring(2, 4);
          case "MMMM":
            return this.month.name;
          case "MMM":
            return this.month.shortName;
          case "MM":
            return e2(this.month.number);
          case "M":
            return this.month.number;
          case "WW":
            return e2(this.weekOfYear);
          case "W":
            return this.weekOfYear;
          case "DDDD":
          case "DDD":
            return this.dayOfYear;
          case "DD":
            return e2(this.day);
          case "D":
            return this.day;
          case "HH":
            return e2(this.hour);
          case "H":
            return this.hour;
          case "dddd":
            return this.weekDay.name;
          case "ddd":
            return this.weekDay.shortName;
          case "dd":
            return e2(this.weekDay.number);
          case "d":
            return this.weekDay.number;
          case "hh":
            return e2(this.hour > 12 ? this.hour - 12 : this.hour || 12);
          case "h":
            return this.hour > 12 ? this.hour - 12 : this.hour || 12;
          case "mm":
            return e2(this.minute);
          case "m":
            return this.minute;
          case "ss":
            return e2(this.second);
          case "s":
            return this.second;
          case "SSS":
            return d(this, x) < 10 ? "00".concat(d(this, x)) : d(this, x) < 100 ? "0".concat(d(this, x)) : d(this, x);
          case "SS":
            return d(this, x) < 10 ? "00" : d(this, x) < 100 ? ("0" + d(this, x)).substring(2, 0) : d(this, x).toString().substring(0, 2);
          case "S":
            return d(this, x) < 10 || d(this, x) < 100 ? "0" : d(this, x).toString().substring(0, 1);
          case "a":
            return this.hour >= 12 ? d(this, j).meridiems[1][1] : d(this, j).meridiems[0][1];
          case "A":
            return this.hour >= 12 ? d(this, j).meridiems[1][0] : d(this, j).meridiems[0][0];
          default:
            return "";
        }
      } }, { key: "setYear", value: function(t2) {
        return this.year = t2, this;
      } }, { key: "setMonths", value: function(t2) {
        return this.months = t2, this;
      } }, { key: "setMonth", value: function(t2) {
        return this.month = t2, this;
      } }, { key: "setWeekDays", value: function(t2) {
        return this.weekDays = t2, this;
      } }, { key: "setDigits", value: function(t2) {
        return this.digits = t2, this;
      } }, { key: "setDay", value: function(t2) {
        return this.day = t2, this;
      } }, { key: "setHour", value: function(t2) {
        return this.hour = t2, this;
      } }, { key: "setMinute", value: function(t2) {
        return this.minute = t2, this;
      } }, { key: "setSecond", value: function(t2) {
        return this.second = t2, this;
      } }, { key: "setMillisecond", value: function(t2) {
        return this.millisecond = t2, this;
      } }, { key: "setFormat", value: function(t2) {
        return m(this, N, t2), this;
      } }, { key: "setLocale", value: function(t2) {
        return this.locale = t2, this;
      } }, { key: "setCalendar", value: function(t2) {
        return this.calendar = t2, this;
      } }, { key: "setDate", value: function(t2) {
        if ("string" == typeof t2) {
          if (!d(this, T).test(t2))
            return this.parse(t2);
          t2 = new Date(t2);
        }
        return "number" == typeof t2 && (t2 = new Date(t2)), t2 instanceof Date && (m(this, A, k), m(this, M, t2.getFullYear()), m(this, O, t2.getMonth()), m(this, S, t2.getDate()), m(this, Y, t2.getHours()), m(this, L, t2.getMinutes()), m(this, W, t2.getSeconds()), m(this, x, t2.getMilliseconds()), m(this, I, false)), t2 instanceof r2 && (m(this, M, t2.year), m(this, O, t2.month.index), m(this, S, t2.day), m(this, Y, t2.hour), m(this, L, t2.minute), m(this, W, t2.second), m(this, x, t2.millisecond), m(this, j, t2.locale), m(this, N, t2._format), m(this, A, t2.calendar), m(this, I, t2.isUTC), m(this, E, t2.ignoreList), m(this, F, t2.custom)), this;
      } }, { key: "setIgnoreList", value: function(t2) {
        return this.ignoreList = t2, this;
      } }, { key: "set", value: function(t2, e2) {
        if (null == t2)
          return this;
        if (p(t2)) {
          var n2 = s({}, t2);
          for (var i2 in n2.date && (this.setDate(n2.date), delete n2.date), n2.calendar && (this.convert(n2.calendar), delete n2.calendar), n2.locale && (this.setLocale(n2.locale), delete n2.locale), m(this, P, false), n2)
            this.set(i2, n2[i2]);
          return m(this, P, true), d(this, J).call(this), this;
        }
        "format" === t2 && (t2 = "_format");
        try {
          this[t2] = e2;
        } catch (t3) {
        }
        return this;
      } }, { key: "add", value: function(t2, e2) {
        if (!(t2 = b(t2)) || !e2)
          return this;
        switch (e2) {
          case "years":
          case "y":
            e2 = "year";
            break;
          case "months":
          case "M":
            e2 = "month";
            break;
          case "days":
          case "d":
            e2 = "day";
            break;
          case "hours":
          case "h":
            e2 = "hour";
            break;
          case "minutes":
          case "m":
            e2 = "minute";
            break;
          case "seconds":
          case "s":
            e2 = "second";
            break;
          case "milliseconds":
          case "ms":
            e2 = "millisecond";
        }
        return this[e2] += t2, this;
      } }, { key: "subtract", value: function(t2, e2) {
        return this.add(-t2, e2);
      } }, { key: "toFirstOfYear", value: function() {
        return this.month = 1, this.day = 1, this;
      } }, { key: "toLastOfYear", value: function() {
        return this.day >= 29 && (this.day = 29), this.month = 12, this.toLastOfMonth(), this;
      } }, { key: "toFirstOfMonth", value: function() {
        return m(this, S, 1), this;
      } }, { key: "toLastOfMonth", value: function() {
        return m(this, S, 0), m(this, O, d(this, O) + 1), d(this, J).call(this), this;
      } }, { key: "toFirstOfWeek", value: function() {
        return this.day -= this.weekDay.index, this;
      } }, { key: "toLastOfWeek", value: function() {
        return this.day += 6 - this.weekDay.index, this;
      } }, { key: "toFirstWeekOfYear", value: function() {
        return this.toFirstOfYear(), 0 === this.weekDay.index ? this : this.toLastOfWeek().setDay(this.day + 1);
      } }, { key: "toLastWeekOfYear", value: function() {
        return this.toLastOfYear().toFirstOfWeek();
      } }, { key: "toString", value: function() {
        return this.format();
      } }, { key: "toDate", value: function() {
        var t2 = new r2(this);
        return "gregorian" !== d(this, A).name && t2.convert(k), new Date(t2.year, t2.month.index, t2.day, t2.hour, t2.minute, t2.second, t2.millisecond);
      } }, { key: "toUTC", value: function() {
        return d(this, I) || (this.minute += this.toDate().getTimezoneOffset(), m(this, I, true)), this;
      } }, { key: "toUnix", value: function() {
        return this.unix;
      } }, { key: "toJulianDay", value: function() {
        return this.toDays() + d(this, A).epoch;
      } }, { key: "toObject", value: function() {
        return { year: d(this, M), month: this.month, day: d(this, S), weekDay: this.weekDay, hour: d(this, Y), minute: d(this, L), second: d(this, W), millisecond: d(this, x), weekOfYear: this.weekOfYear, dayOfYear: this.dayOfYear, daysLeft: this.daysLeft, calendar: d(this, A), locale: d(this, j), format: d(this, N) || "YYYY/MM/DD", ignoreList: d(this, E) };
      } }, { key: "toJSON", value: function() {
        return this.valueOf();
      } }, { key: "valueOf", value: function() {
        return this.toDate().valueOf();
      } }, { key: "toDays", value: function() {
        if (this.isValid)
          return d(this, A).getAllDays(this);
      } }, { key: "dayOfBeginning", get: function() {
        return this.toDays();
      } }, { key: "dayOfYear", get: function() {
        if (this.isValid)
          return d(this, A).getDayOfYear(this);
      } }, { key: "weekOfYear", get: function() {
        if (this.isValid)
          return 1 + ~~(this.dayOfYear / 7);
      } }, { key: "daysLeft", get: function() {
        if (this.isValid) {
          var t2 = d(this, A).yearLength;
          return (this.isLeap ? t2 + 1 : t2) - this.dayOfYear;
        }
      } }, { key: "year", get: function() {
        return d(this, M);
      }, set: function(t2) {
        m(this, M, b(t2)), d(this, J).call(this);
      } }, { key: "month", get: function() {
        return this.months[d(this, O)] || {};
      }, set: function(t2) {
        var e2;
        t2 = null !== (e2 = b(t2.valueOf()) - 1) && void 0 !== e2 ? e2 : void 0, m(this, O, t2), D(t2, 0, 11) && d(this, J).call(this);
      } }, { key: "monthIndex", get: function() {
        return d(this, O);
      } }, { key: "day", get: function() {
        return d(this, S);
      }, set: function(t2) {
        t2 = b(t2), m(this, S, t2), D(t2, 1, 28) && d(this, J).call(this);
      } }, { key: "weekDay", get: function() {
        if (!this.isValid)
          return {};
        var t2 = (this.toJulianDay() + 3) % 7;
        return d(this, C).call(this)[t2];
      } }, { key: "hour", get: function() {
        return d(this, Y);
      }, set: function(t2) {
        t2 = b(t2), m(this, Y, t2), D(t2, 0, 23) && d(this, J).call(this);
      } }, { key: "minute", get: function() {
        return d(this, L);
      }, set: function(t2) {
        t2 = b(t2), m(this, L, t2), D(t2, 0, 59) && d(this, J).call(this);
      } }, { key: "second", get: function() {
        return d(this, W);
      }, set: function(t2) {
        t2 = b(t2), m(this, W, t2), D(t2, 0, 59) && d(this, J).call(this);
      } }, { key: "millisecond", get: function() {
        return d(this, x);
      }, set: function(t2) {
        t2 = b(t2), m(this, x, t2), D(t2, 0, 999) && d(this, J).call(this);
      } }, { key: "months", get: function() {
        var t2 = d(this, A).getMonthLengths(this.isLeap);
        return (d(this, F).months || d(this, j).months).map(function(e2, n2) {
          var i2 = u(e2, 2);
          return { name: i2[0], shortName: i2[1], length: t2[n2], index: n2, number: n2 + 1, toString: function() {
            return this.number.toString();
          }, valueOf: function() {
            return this.number;
          } };
        });
      }, set: function(t2) {
        if (!t2)
          return delete d(this, F).months;
        w(t2) && 12 === t2.length && t2.every(function(t3) {
          return w(t3) && 2 === t3.length && t3.every(function(t4) {
            return "string" == typeof t4;
          });
        }) && (d(this, F).months = t2);
      } }, { key: "weekDays", get: function() {
        return d(this, C).call(this).sort(function(t2, e2) {
          return t2.index - e2.index;
        });
      }, set: function(t2) {
        if (!t2)
          return delete d(this, F).weekDays;
        w(t2) && 7 === t2.length && t2.every(function(t3) {
          return w(t3) && 2 === t3.length && t3.every(function(t4) {
            return "string" == typeof t4;
          });
        }) && (d(this, F).weekDays = t2);
      } }, { key: "leaps", get: function() {
        return d(this, A).getLeaps(d(this, M));
      } }, { key: "calendar", get: function() {
        return d(this, A);
      }, set: function(t2) {
        this.convert(t2);
      } }, { key: "locale", get: function() {
        return d(this, j);
      }, set: function(t2) {
        void 0 === t2 && (t2 = g), p(t2) && m(this, j, t2);
      } }, { key: "custom", get: function() {
        return d(this, F);
      } }, { key: "meridiems", get: function() {
        return d(this, j).meridiems;
      } }, { key: "digits", get: function() {
        return d(this, F).digits || d(this, j).digits;
      }, set: function(t2) {
        if (!t2)
          return delete d(this, F).digits;
        w(t2) && 10 === t2.length && (d(this, F).digits = t2);
      } }, { key: "_format", get: function() {
        return d(this, N);
      }, set: function(t2) {
        "string" == typeof t2 && m(this, N, t2);
      } }, { key: "isLeap", get: function() {
        return d(this, A).isLeap(d(this, M));
      } }, { key: "isValid", get: function() {
        return !isNaN(d(this, M)) && !isNaN(d(this, O)) && !isNaN(d(this, S));
      } }, { key: "isUTC", get: function() {
        return d(this, I);
      } }, { key: "unix", get: function() {
        return (this.valueOf() - this.millisecond) / 1e3;
      } }, { key: "ignoreList", get: function() {
        return d(this, E);
      }, set: function(t2) {
        w(t2) && m(this, E, t2);
      } }, { key: "weekStartDayIndex", get: function() {
        return d(this, A).weekStartDayIndex;
      }, set: function(t2) {
        void 0 !== (t2 = b(t2)) && (d(this, A).weekStartDayIndex = Math.abs(t2) % 7);
      } }, { key: "date", set: function(t2) {
        this.setDate(t2);
      } }]) && f(a2.prototype, c2), v2 && f(a2, v2), r2;
    }();
  }
});

export {
  index_module_exports,
  init_index_module
};
//# sourceMappingURL=chunk-OF6PIJVV.js.map
